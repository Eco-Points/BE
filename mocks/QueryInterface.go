// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	locations "eco_points/internal/features/locations"

	mock "github.com/stretchr/testify/mock"
)

// QueryInterface is an autogenerated mock type for the QueryInterface type
type QueryInterface struct {
	mock.Mock
}

// AddLocation provides a mock function with given fields: data
func (_m *QueryInterface) AddLocation(data locations.LocationInterface) error {
	ret := _m.Called(data)

	if len(ret) == 0 {
		panic("no return value specified for AddLocation")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(locations.LocationInterface) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewQueryInterface creates a new instance of QueryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewQueryInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *QueryInterface {
	mock := &QueryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
