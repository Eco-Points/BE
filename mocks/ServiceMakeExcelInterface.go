// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ServiceMakeExcelInterface is an autogenerated mock type for the ServiceMakeExcelInterface type
type ServiceMakeExcelInterface struct {
	mock.Mock
}

// DeleteFile provides a mock function with given fields: filePath
func (_m *ServiceMakeExcelInterface) DeleteFile(filePath string) error {
	ret := _m.Called(filePath)

	if len(ret) == 0 {
		panic("no return value specified for DeleteFile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(filePath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MakeExcel provides a mock function with given fields: date, table, userid, isVerif, limit
func (_m *ServiceMakeExcelInterface) MakeExcel(date string, table string, userid uint, isVerif bool, limit uint) (string, error) {
	ret := _m.Called(date, table, userid, isVerif, limit)

	if len(ret) == 0 {
		panic("no return value specified for MakeExcel")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string, uint, bool, uint) (string, error)); ok {
		return rf(date, table, userid, isVerif, limit)
	}
	if rf, ok := ret.Get(0).(func(string, string, uint, bool, uint) string); ok {
		r0 = rf(date, table, userid, isVerif, limit)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, string, uint, bool, uint) error); ok {
		r1 = rf(date, table, userid, isVerif, limit)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewServiceMakeExcelInterface creates a new instance of ServiceMakeExcelInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewServiceMakeExcelInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ServiceMakeExcelInterface {
	mock := &ServiceMakeExcelInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
