// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	exchanges "eco_points/internal/features/exchanges"

	mock "github.com/stretchr/testify/mock"
)

// ExServices is an autogenerated mock type for the ExServices type
type ExServices struct {
	mock.Mock
}

// AddExchange provides a mock function with given fields: newExchange
func (_m *ExServices) AddExchange(newExchange exchanges.Exchange) error {
	ret := _m.Called(newExchange)

	if len(ret) == 0 {
		panic("no return value specified for AddExchange")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(exchanges.Exchange) error); ok {
		r0 = rf(newExchange)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewExServices creates a new instance of ExServices. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewExServices(t interface {
	mock.TestingT
	Cleanup(func())
}) *ExServices {
	mock := &ExServices{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
